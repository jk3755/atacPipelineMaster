##
c <- a
d <- a+1
e <- a+2
f <- a+3
g <- a+4
h <- a+5
i <- a+6
j <- a+7
k <- a+8
l <- a+9
##
tmp1 <- paste0("'{path}footprints/operations/raw/{mergedsample}.", orderedNames[c], ".rawFPanalysis.bamcopy1.done", "', ")
tmp2 <- paste0("'{path}footprints/operations/raw/{mergedsample}.", orderedNames[d], ".rawFPanalysis.bamcopy2.done", "', ")
tmp3 <- paste0("'{path}footprints/operations/raw/{mergedsample}.", orderedNames[e], ".rawFPanalysis.bamcopy3.done", "', ")
tmp4 <- paste0("'{path}footprints/operations/raw/{mergedsample}.", orderedNames[f], ".rawFPanalysis.bamcopy4.done", "', ")
tmp5 <- paste0("'{path}footprints/operations/raw/{mergedsample}.", orderedNames[g], ".rawFPanalysis.bamcopy5.done", "', ")
tmp6 <- paste0("'{path}footprints/operations/raw/{mergedsample}.", orderedNames[h], ".rawFPanalysis.bamcopy6.done", "', ")
tmp7 <- paste0("'{path}footprints/operations/raw/{mergedsample}.", orderedNames[i], ".rawFPanalysis.bamcopy7.done", "', ")
tmp8 <- paste0("'{path}footprints/operations/raw/{mergedsample}.", orderedNames[j], ".rawFPanalysis.bamcopy8.done", "', ")
tmp9 <- paste0("'{path}footprints/operations/raw/{mergedsample}.", orderedNames[k], ".rawFPanalysis.bamcopy9.done", "', ")
tmp10 <- paste0("'{path}footprints/operations/raw/{mergedsample}.", orderedNames[l], ".rawFPanalysis.bamcopy10.done", "', ")
tmp11 <- paste0("'{path}footprints/operations/raw/{mergedsample}.", orderedNames[m], ".rawFPanalysis.bamcopy11.done", "', ")
tmp12 <- paste0("'{path}footprints/operations/raw/{mergedsample}.", orderedNames[n], ".rawFPanalysis.bamcopy12.done", "', ")
tmp13 <- paste0("'{path}footprints/operations/raw/{mergedsample}.", orderedNames[o], ".rawFPanalysis.bamcopy13.done", "', ")
tmp14 <- paste0("'{path}footprints/operations/raw/{mergedsample}.", orderedNames[p], ".rawFPanalysis.bamcopy14.done", "', ")
tmp15 <- paste0("'{path}footprints/operations/raw/{mergedsample}.", orderedNames[q], ".rawFPanalysis.bamcopy15.done", "', ")
tmp16 <- paste0("'{path}footprints/operations/raw/{mergedsample}.", orderedNames[r], ".rawFPanalysis.bamcopy16.done", "', ")
tmp17 <- paste0("'{path}footprints/operations/raw/{mergedsample}.", orderedNames[s], ".rawFPanalysis.bamcopy17.done", "', ")
tmp18 <- paste0("'{path}footprints/operations/raw/{mergedsample}.", orderedNames[t], ".rawFPanalysis.bamcopy18.done", "', ")
tmp19 <- paste0("'{path}footprints/operations/raw/{mergedsample}.", orderedNames[u], ".rawFPanalysis.bamcopy19.done", "', ")
tmp20 <- paste0("'{path}footprints/operations/raw/{mergedsample}.", orderedNames[v], ".rawFPanalysis.bamcopy20.done", "'")
##
strings[b] <- paste0(
"rule rawFPanalysis_group",
b,
":\n",
"\tinput:\n\t\t",
tmp1, "\n\t\t", tmp2, "\n\t\t", tmp3, "\n\t\t", tmp4, "\n\t\t", tmp5, "\n\t\t",
tmp6, "\n\t\t", tmp7, "\n\t\t", tmp8, "\n\t\t", tmp9, "\n\t\t", tmp10, "\n\t\t",
tmp11, "\n\t\t", tmp12, "\n\t\t", tmp13, "\n\t\t", tmp14, "\n\t\t", tmp15, "\n\t\t",
tmp16, "\n\t\t", tmp17, "\n\t\t", tmp18, "\n\t\t", tmp19, "\n\t\t", tmp20, "\n\t",
"output:\n\t\t",
"'{path}footprints/operations/groups/{mergedsample}.rawFPanalysis.group", b, ".done'\n",
"\tshell:\n\t\t",
"'touch {output}'")
##
a <- a+20
b <- b+1
}
#### Groups 40-45
while (b <= 45){
##
c <- a
d <- a+1
e <- a+2
f <- a+3
g <- a+4
h <- a+5
i <- a+6
j <- a+7
k <- a+8
l <- a+9
##
tmp1 <- paste0("'{path}footprints/operations/raw/{mergedsample}.", orderedNames[c], ".rawFPanalysis.bamcopy1.done", "', ")
tmp2 <- paste0("'{path}footprints/operations/raw/{mergedsample}.", orderedNames[d], ".rawFPanalysis.bamcopy2.done", "', ")
tmp3 <- paste0("'{path}footprints/operations/raw/{mergedsample}.", orderedNames[e], ".rawFPanalysis.bamcopy3.done", "', ")
tmp4 <- paste0("'{path}footprints/operations/raw/{mergedsample}.", orderedNames[f], ".rawFPanalysis.bamcopy4.done", "', ")
tmp5 <- paste0("'{path}footprints/operations/raw/{mergedsample}.", orderedNames[g], ".rawFPanalysis.bamcopy5.done", "', ")
tmp6 <- paste0("'{path}footprints/operations/raw/{mergedsample}.", orderedNames[h], ".rawFPanalysis.bamcopy6.done", "', ")
tmp7 <- paste0("'{path}footprints/operations/raw/{mergedsample}.", orderedNames[i], ".rawFPanalysis.bamcopy7.done", "', ")
tmp8 <- paste0("'{path}footprints/operations/raw/{mergedsample}.", orderedNames[j], ".rawFPanalysis.bamcopy8.done", "', ")
tmp9 <- paste0("'{path}footprints/operations/raw/{mergedsample}.", orderedNames[k], ".rawFPanalysis.bamcopy9.done", "', ")
tmp10 <- paste0("'{path}footprints/operations/raw/{mergedsample}.", orderedNames[l], ".rawFPanalysis.bamcopy10.done", "', ")
##
strings[b] <- paste0(
"rule rawFPanalysis_group",
b,
":\n",
"\tinput:\n\t\t",
tmp1, "\n\t\t", tmp2, "\n\t\t", tmp3, "\n\t\t", tmp4, "\n\t\t", tmp5, "\n\t\t",
tmp6, "\n\t\t", tmp7, "\n\t\t", tmp8, "\n\t\t", tmp9, "\n\t\t", tmp10, "\n\t",
"output:\n\t\t",
"'{path}footprints/operations/groups/{mergedsample}.rawFPanalysis.group", b, ".done'\n",
"\tshell:\n\t\t",
"'touch {output}'")
##
a <- a+10
b <- b+1
}
## Remaining
while (a <= 1229){
##
c <- a
d <- a+1
##
tmp1 <- paste0("'{path}footprints/operations/raw/{mergedsample}.", orderedNames[c], ".rawFPanalysis.bamcopy1.done", "', ")
tmp2 <- paste0("'{path}footprints/operations/raw/{mergedsample}.", orderedNames[d], ".rawFPanalysis.bamcopy2.done", "', ")
##
strings[b] <- paste0(
"rule rawFPanalysis_group",
b,
":\n",
"\tinput:\n\t\t",
tmp1, "\n\t\t", tmp2, "\n\t",
"output:\n\t\t",
"'{path}footprints/operations/groups/{mergedsample}.rawFPanalysis.group", b, ".done'\n",
"\tshell:\n\t\t",
"'touch {output}'")
##
a <- a+2
b <- b+1
}
#### Write the file ####
outPath <- "C:\\Users\\jsk33\\Documents\\git\\atacPipelineMaster\\panTF\\names\\panTFraw.snakefile"
##
write.table(
strings,
file = outPath,
quote = FALSE,
sep = ",",
eol = "\n",
row.names = FALSE,
col.names = FALSE)
####
namePath <- "C:\\Users\\jsk33\\Documents\\git\\atacPipelineMaster\\panTF\\names\\bindingSitesSizeOrdered.txt"
orderedNames <- readLines(namePath)
numGenes <- length(orderedNames)
strings <- c()
a <- 1 # count for genes
b <- 1 # string index (group)
#### Groups 1-40
while (b <= 40){
##
c <- a
d <- a+1
e <- a+2
f <- a+3
g <- a+4
h <- a+5
i <- a+6
j <- a+7
k <- a+8
l <- a+9
m <- a+10
n <- a+11
o <- a+12
p <- a+13
q <- a+14
r <- a+15
s <- a+16
t <- a+17
u <- a+18
v <- a+19
##
tmp1 <- paste0("'{path}footprints/operations/raw/{mergedsample}.", orderedNames[c], ".rawFPanalysis.bamcopy1.done", "', ")
tmp2 <- paste0("'{path}footprints/operations/raw/{mergedsample}.", orderedNames[d], ".rawFPanalysis.bamcopy2.done", "', ")
tmp3 <- paste0("'{path}footprints/operations/raw/{mergedsample}.", orderedNames[e], ".rawFPanalysis.bamcopy3.done", "', ")
tmp4 <- paste0("'{path}footprints/operations/raw/{mergedsample}.", orderedNames[f], ".rawFPanalysis.bamcopy4.done", "', ")
tmp5 <- paste0("'{path}footprints/operations/raw/{mergedsample}.", orderedNames[g], ".rawFPanalysis.bamcopy5.done", "', ")
tmp6 <- paste0("'{path}footprints/operations/raw/{mergedsample}.", orderedNames[h], ".rawFPanalysis.bamcopy6.done", "', ")
tmp7 <- paste0("'{path}footprints/operations/raw/{mergedsample}.", orderedNames[i], ".rawFPanalysis.bamcopy7.done", "', ")
tmp8 <- paste0("'{path}footprints/operations/raw/{mergedsample}.", orderedNames[j], ".rawFPanalysis.bamcopy8.done", "', ")
tmp9 <- paste0("'{path}footprints/operations/raw/{mergedsample}.", orderedNames[k], ".rawFPanalysis.bamcopy9.done", "', ")
tmp10 <- paste0("'{path}footprints/operations/raw/{mergedsample}.", orderedNames[l], ".rawFPanalysis.bamcopy10.done", "', ")
tmp11 <- paste0("'{path}footprints/operations/raw/{mergedsample}.", orderedNames[m], ".rawFPanalysis.bamcopy11.done", "', ")
tmp12 <- paste0("'{path}footprints/operations/raw/{mergedsample}.", orderedNames[n], ".rawFPanalysis.bamcopy12.done", "', ")
tmp13 <- paste0("'{path}footprints/operations/raw/{mergedsample}.", orderedNames[o], ".rawFPanalysis.bamcopy13.done", "', ")
tmp14 <- paste0("'{path}footprints/operations/raw/{mergedsample}.", orderedNames[p], ".rawFPanalysis.bamcopy14.done", "', ")
tmp15 <- paste0("'{path}footprints/operations/raw/{mergedsample}.", orderedNames[q], ".rawFPanalysis.bamcopy15.done", "', ")
tmp16 <- paste0("'{path}footprints/operations/raw/{mergedsample}.", orderedNames[r], ".rawFPanalysis.bamcopy16.done", "', ")
tmp17 <- paste0("'{path}footprints/operations/raw/{mergedsample}.", orderedNames[s], ".rawFPanalysis.bamcopy17.done", "', ")
tmp18 <- paste0("'{path}footprints/operations/raw/{mergedsample}.", orderedNames[t], ".rawFPanalysis.bamcopy18.done", "', ")
tmp19 <- paste0("'{path}footprints/operations/raw/{mergedsample}.", orderedNames[u], ".rawFPanalysis.bamcopy19.done", "', ")
tmp20 <- paste0("'{path}footprints/operations/raw/{mergedsample}.", orderedNames[v], ".rawFPanalysis.bamcopy20.done", "'")
##
strings[b] <- paste0(
"rule rawFPanalysis_group",
b,
":\n",
"\tinput:\n\t\t",
tmp1, "\n\t\t", tmp2, "\n\t\t", tmp3, "\n\t\t", tmp4, "\n\t\t", tmp5, "\n\t\t",
tmp6, "\n\t\t", tmp7, "\n\t\t", tmp8, "\n\t\t", tmp9, "\n\t\t", tmp10, "\n\t\t",
tmp11, "\n\t\t", tmp12, "\n\t\t", tmp13, "\n\t\t", tmp14, "\n\t\t", tmp15, "\n\t\t",
tmp16, "\n\t\t", tmp17, "\n\t\t", tmp18, "\n\t\t", tmp19, "\n\t\t", tmp20, "\n\t",
"output:\n\t\t",
"'{path}footprints/operations/groups/{mergedsample}.rawFPanalysis.group", b, ".done'\n",
"\tshell:\n\t\t",
"'touch {output}'")
##
a <- a+20
b <- b+1
}
# #### Groups 40-45
# while (b <= 45){
#
#   ##
#   c <- a
#   d <- a+1
#   e <- a+2
#   f <- a+3
#   g <- a+4
#   h <- a+5
#   i <- a+6
#   j <- a+7
#   k <- a+8
#   l <- a+9
#
#   ##
#   tmp1 <- paste0("'{path}footprints/operations/raw/{mergedsample}.", orderedNames[c], ".rawFPanalysis.bamcopy1.done", "', ")
#   tmp2 <- paste0("'{path}footprints/operations/raw/{mergedsample}.", orderedNames[d], ".rawFPanalysis.bamcopy2.done", "', ")
#   tmp3 <- paste0("'{path}footprints/operations/raw/{mergedsample}.", orderedNames[e], ".rawFPanalysis.bamcopy3.done", "', ")
#   tmp4 <- paste0("'{path}footprints/operations/raw/{mergedsample}.", orderedNames[f], ".rawFPanalysis.bamcopy4.done", "', ")
#   tmp5 <- paste0("'{path}footprints/operations/raw/{mergedsample}.", orderedNames[g], ".rawFPanalysis.bamcopy5.done", "', ")
#   tmp6 <- paste0("'{path}footprints/operations/raw/{mergedsample}.", orderedNames[h], ".rawFPanalysis.bamcopy6.done", "', ")
#   tmp7 <- paste0("'{path}footprints/operations/raw/{mergedsample}.", orderedNames[i], ".rawFPanalysis.bamcopy7.done", "', ")
#   tmp8 <- paste0("'{path}footprints/operations/raw/{mergedsample}.", orderedNames[j], ".rawFPanalysis.bamcopy8.done", "', ")
#   tmp9 <- paste0("'{path}footprints/operations/raw/{mergedsample}.", orderedNames[k], ".rawFPanalysis.bamcopy9.done", "', ")
#   tmp10 <- paste0("'{path}footprints/operations/raw/{mergedsample}.", orderedNames[l], ".rawFPanalysis.bamcopy10.done", "', ")
#
#   ##
#   strings[b] <- paste0(
#     "rule rawFPanalysis_group",
#     b,
#     ":\n",
#     "\tinput:\n\t\t",
#     tmp1, "\n\t\t", tmp2, "\n\t\t", tmp3, "\n\t\t", tmp4, "\n\t\t", tmp5, "\n\t\t",
#     tmp6, "\n\t\t", tmp7, "\n\t\t", tmp8, "\n\t\t", tmp9, "\n\t\t", tmp10, "\n\t",
#     "output:\n\t\t",
#     "'{path}footprints/operations/groups/{mergedsample}.rawFPanalysis.group", b, ".done'\n",
#     "\tshell:\n\t\t",
#     "'touch {output}'")
#
#   ##
#   a <- a+10
#   b <- b+1
# }
## Remaining
while (a <= 1229){
##
c <- a
d <- a+1
e <- a+2
f <- a+3
g <- a+4
h <- a+5
i <- a+6
j <- a+7
k <- a+8
l <- a+9
m <- a+10
n <- a+11
o <- a+12
p <- a+13
q <- a+14
r <- a+15
s <- a+16
t <- a+17
u <- a+18
v <- a+19
##
tmp1 <- paste0("'{path}footprints/operations/raw/{mergedsample}.", orderedNames[c], ".rawFPanalysis.bamcopy1.done", "', ")
tmp2 <- paste0("'{path}footprints/operations/raw/{mergedsample}.", orderedNames[d], ".rawFPanalysis.bamcopy2.done", "', ")
tmp3 <- paste0("'{path}footprints/operations/raw/{mergedsample}.", orderedNames[e], ".rawFPanalysis.bamcopy3.done", "', ")
tmp4 <- paste0("'{path}footprints/operations/raw/{mergedsample}.", orderedNames[f], ".rawFPanalysis.bamcopy4.done", "', ")
tmp5 <- paste0("'{path}footprints/operations/raw/{mergedsample}.", orderedNames[g], ".rawFPanalysis.bamcopy5.done", "', ")
tmp6 <- paste0("'{path}footprints/operations/raw/{mergedsample}.", orderedNames[h], ".rawFPanalysis.bamcopy6.done", "', ")
tmp7 <- paste0("'{path}footprints/operations/raw/{mergedsample}.", orderedNames[i], ".rawFPanalysis.bamcopy7.done", "', ")
tmp8 <- paste0("'{path}footprints/operations/raw/{mergedsample}.", orderedNames[j], ".rawFPanalysis.bamcopy8.done", "', ")
tmp9 <- paste0("'{path}footprints/operations/raw/{mergedsample}.", orderedNames[k], ".rawFPanalysis.bamcopy9.done", "', ")
tmp10 <- paste0("'{path}footprints/operations/raw/{mergedsample}.", orderedNames[l], ".rawFPanalysis.bamcopy10.done", "', ")
tmp11 <- paste0("'{path}footprints/operations/raw/{mergedsample}.", orderedNames[m], ".rawFPanalysis.bamcopy11.done", "', ")
tmp12 <- paste0("'{path}footprints/operations/raw/{mergedsample}.", orderedNames[n], ".rawFPanalysis.bamcopy12.done", "', ")
tmp13 <- paste0("'{path}footprints/operations/raw/{mergedsample}.", orderedNames[o], ".rawFPanalysis.bamcopy13.done", "', ")
tmp14 <- paste0("'{path}footprints/operations/raw/{mergedsample}.", orderedNames[p], ".rawFPanalysis.bamcopy14.done", "', ")
tmp15 <- paste0("'{path}footprints/operations/raw/{mergedsample}.", orderedNames[q], ".rawFPanalysis.bamcopy15.done", "', ")
tmp16 <- paste0("'{path}footprints/operations/raw/{mergedsample}.", orderedNames[r], ".rawFPanalysis.bamcopy16.done", "', ")
tmp17 <- paste0("'{path}footprints/operations/raw/{mergedsample}.", orderedNames[s], ".rawFPanalysis.bamcopy17.done", "', ")
tmp18 <- paste0("'{path}footprints/operations/raw/{mergedsample}.", orderedNames[t], ".rawFPanalysis.bamcopy18.done", "', ")
tmp19 <- paste0("'{path}footprints/operations/raw/{mergedsample}.", orderedNames[u], ".rawFPanalysis.bamcopy19.done", "', ")
tmp20 <- paste0("'{path}footprints/operations/raw/{mergedsample}.", orderedNames[v], ".rawFPanalysis.bamcopy20.done", "'")
##
strings[b] <- paste0(
"rule rawFPanalysis_group",
b,
":\n",
"\tinput:\n\t\t",
tmp1, "\n\t\t", tmp2, "\n\t\t", tmp3, "\n\t\t", tmp4, "\n\t\t", tmp5, "\n\t\t",
tmp6, "\n\t\t", tmp7, "\n\t\t", tmp8, "\n\t\t", tmp9, "\n\t\t", tmp10, "\n\t\t",
tmp11, "\n\t\t", tmp12, "\n\t\t", tmp13, "\n\t\t", tmp14, "\n\t\t", tmp15, "\n\t\t",
tmp16, "\n\t\t", tmp17, "\n\t\t", tmp18, "\n\t\t", tmp19, "\n\t\t", tmp20, "\n\t",
"output:\n\t\t",
"'{path}footprints/operations/groups/{mergedsample}.rawFPanalysis.group", b, ".done'\n",
"\tshell:\n\t\t",
"'touch {output}'")
##
a <- a+20
b <- b+1
}
#### Write the file ####
outPath <- "C:\\Users\\jsk33\\Documents\\git\\atacPipelineMaster\\panTF\\names\\panTFraw.snakefile"
##
write.table(
strings,
file = outPath,
quote = FALSE,
sep = ",",
eol = "\n",
row.names = FALSE,
col.names = FALSE)
#### Code testing ####
bamPath <- "C:\\Users\\jsk33\\Desktop\\LNCaP-WT-01-REP1of1.u.bam"
#### Make the hg38 GRanges reference
cat("Generating hg38 reference genome", "\n")
hg38 <- GRanges(seqinfo(BSgenome.Hsapiens.UCSC.hg38))
## subset to standard chromosomes only
hg38 <- keepStandardChromosomes(hg38, pruning.mode="coarse")
hg38 <- trim(hg38)
####
cat("Loading relevant reads", "\n")
bamFile <- BamFile(bamPath)
param <- ScanBamParam(which = hg38)
bamIn <- readGAlignments(bamFile, param = param)
##
cat("Converting reads to insertions", "\n")
grIn <- granges(bamIn)
grIn <- keepStandardChromosomes(grIn, pruning.mode="coarse")
grIn <- trim(grIn)
grIn <- resize(grIn, width = 1)
##
cat("Shifting insertions +4/-5 bp", "\n")
plusIdx <- which(strand(grIn) == "+")
minusIdx <- which(strand(grIn) == "-")
grPlus <- grIn[plusIdx]
grMinus <- grIn[minusIdx]
## Shift
grPlusShifted <- shift(grPlus, shift=4L)
grMinusShifted <- shift(grMinus, shift=-5L)
## Merge
grMerged <- c(grPlusShifted, grMinusShifted)
shiftedInsertions <- grMerged
##
cat("Generating insertion matrix", "\n")
insRLE <- coverage(grMerged)
## Create a views object for the Rle list using the Granges sites data
insViews <- Views(insRLE, grIn)
## Convert to a vector
insMatrix <- as.matrix(insViews)
####
uniqueIns <- unique(insMatrix)
numUniqueIns <- length(uniqueIns)
##
insData <- matrix(data = NA, ncol = 2, nrow = numUniqueIns)
colnames(insData) <- c("Number of Insertions", "Times Observed in Genome")
##
for (a in 1:numUniqueIns){
insData[a,1] <- uniqueIns[a]
numObs <- length(which(insMatrix == uniqueIns[a]))
insData[a,2] <- numObs
}
View(insData)
View(insData)
plot(insData)
load("C:/Users/jsk33/Desktop/HOXB6.bindingSites.Rdata")
View(bindingSites)
View(bindingSites)
b <- 1
allSites <- bindingSites[[b]][["sites"]]
#### Subset the binding sites based on the current chromosome
allSites <- allSites["chr1"]
View(allSites)
View(allSites)
suppressMessages(library(GenomicRanges))
suppressMessages(library(stats4))
suppressMessages(library(BiocGenerics))
suppressMessages(library(parallel))
suppressMessages(library(Rsamtools))
suppressMessages(library(GenomicAlignments))
suppressMessages(library(genomation))
allSites <- bindingSites[[b]][["sites"]]
#### Subset the binding sites based on the current chromosome
allSites <- keepStandardChromosomes(allSites, pruning.mode="coarse")
allSites <- trim(allSites)
View(allSites)
View(allSites)
View(allSites)
View(allSites)
##
allSites <- allSites["chr1"]
##
allSites <- allSites[["chr1"]]
names(allSites)
hg38 <- GRanges(seqinfo(BSgenome.Hsapiens.UCSC.hg38))
## subset to standard chromosomes only
hg38 <- keepStandardChromosomes(hg38, pruning.mode="coarse")
hg38 <- trim(hg38)
View(hg38)
View(hg38)
##
allSites <- setNames(allSites, names)
?setNames
allSites@seqnames
##
allSites <- setNames(allSites, allSites@seqnames@values)
View(allSites)
View(allSites)
allSites@ranges@NAMES
##
allSites <- setNames(allSites, allSites@seqnames@values)
View(allSites)
View(allSites)
allSites@ranges@NAMES
as.matrix(allSites@seqnames)
#### Subset the binding sites based on the current chromosome
## Need to regenerate the names() field from seqlevs
## Convert seqlevs Rle to matrix
rangeNames <- as.matrix(allSites@seqnames)
allSites <- setNames(allSites, rangeNames)
View(allSites)
View(allSites)
allSites@ranges@NAMES
View(rangeNames)
View(rangeNames)
allSites <- bindingSites[[b]][["sites"]]
allSites <- keepStandardChromosomes(allSites, pruning.mode="coarse")
allSites <- trim(allSites)
numSites <- length(allSites)
#### Define the bins
binSize <- numSites / 20
binSize <- floor(binSize)
#### Define the bins
binSize <- numSites / 20
binSize <- floor(binSize)
#### Doesn't make sense to subset by chromosome, subset into 20 equal sized bins
allSites <- allSites[1:binSize]
View(allSites)
View(allSites)
currentBin <- "1"
#### Doesn't make sense to subset by chromosome, subset into 20 equal sized bins
currentBin <- as.numeric(currentBin)
binSize * 20
currentBin <- 1
if (currentBin == 1){
cat("first")
#allSites <- allSites[1:binSize]
} else if (currentBin >= 2 && currentBin <= 19){
cat("second")
} else if (currentBin == 20){
cat("third")
}
currentBin <- 2
if (currentBin == 1){
cat("first")
#allSites <- allSites[1:binSize]
} else if (currentBin >= 2 && currentBin <= 19){
cat("second")
} else if (currentBin == 20){
cat("third")
}
currentBin <- 19
if (currentBin == 1){
cat("first")
#allSites <- allSites[1:binSize]
} else if (currentBin >= 2 && currentBin <= 19){
cat("second")
} else if (currentBin == 20){
cat("third")
}
currentBin <- 10
if (currentBin == 1){
cat("first")
#allSites <- allSites[1:binSize]
} else if (currentBin >= 2 && currentBin <= 19){
cat("second")
} else if (currentBin == 20){
cat("third")
}
currentBin <- 20
if (currentBin == 1){
cat("first")
#allSites <- allSites[1:binSize]
} else if (currentBin >= 2 && currentBin <= 19){
cat("second")
} else if (currentBin == 20){
cat("third")
}
currentBin <- 2
allSites <- bindingSites[[b]][["sites"]]
#### Subset the binding sites based on the current chromosome
## Subset to standard chromosomes only
allSites <- keepStandardChromosomes(allSites, pruning.mode="coarse")
allSites <- trim(allSites)
if (currentBin == 1){
allSites <- allSites[1:binSize]
} else if (currentBin >= 2 && currentBin <= 19){
allSites <- allSites[((currentBin - 1) * binSize):(binSize * currentBin)]
} else if (currentBin == 20){
}
View(allSites)
View(allSites)
19 * binSize
20 * binSize
